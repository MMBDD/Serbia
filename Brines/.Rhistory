labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
ggplot(X, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.text.size = 20)
ggplot(X, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20)+
theme(legend.text.size = 20))
ggplot(X, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20)+
scale_legend_text_size(size = 20))
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot(X, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20)+
scale_legend_text_size(size = 20))
axis.title.y = element_text(size = 20))
axis.title.y = element_text(size = 20)
axis.title.y = element_text(size = 20))
ggplot(X, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(margin = unit(20, "pt"))+
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
ggplot(X, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(margin = unit(20, "pt"),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
ggplot(X, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(margin = unit(10, "pt"),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
ggplot(X, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(margin = unit(20, "pt"),
element_text(size = 20))
ggplot(X, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
file2="rawfile.csv"
f=read.csv(file2, row.names=1, check.names = FALSE, sep=";")
model2 <- aov(Intensity ~ Temp*Mass*Day, data=X2)
summary(model2)
coef(model2)
ggplot(X2, aes(x=Day, y=Intensity, color=factor(Temp), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity")
ggplot(X2, aes(x=Day, y=Intensity, color=factor(Temp), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day 45: Day vs Intensity",
x="Day",
y="Intensity")
ggplot(X2, aes(x=Day, y=Intensity, color=factor(Temp), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Mass 45: Day vs Intensity",
x="Day",
y="Intensity")
file="Sample1.csv"
X=read.csv(file, row.names=1, check.names = FALSE, sep=";")
View(X)
X_day_15 <- X %>% filter(Day == 15)
#X_day_15 <- X %>% filter(Day == 15)
X15=X[X$Day == 15, ]
View(X15)
model3 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(model3)
coef(model3)
ggplot(X3, aes(x=Temp, y=Intensity, color=factor(Temp), linetype=factor(Mass))) +
geom_line(size = 1.5) +
labs(title="Day15: Temperature vs Intensity",
x="Temperature",
y="Intensity")
ggplot(X15, aes(x=Temp, y=Intensity, color=factor(Temp), linetype=factor(Mass))) +
geom_line(size = 1.5) +
labs(title="Day15: Temperature vs Intensity",
x="Temperature",
y="Intensity")
X15=X[X$Day == 18, ]
model3 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(model3)
X15=X[X$Day == 15, ]
model3 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(model3)
coef(model3)
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X18=X[X$Day == 18, ]
model4 <- aov(Intensity ~ Temp*Mass, data=X18)
summary(model4)
X18=X[X$Day == 18, ]
modelDay18 <- aov(Intensity ~ Temp*Mass, data=X18)
summary(modelDay18)
coef(modelDay18)
X15=X[X$Day == 13, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 11, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 6, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 4, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 1, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 20, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 22, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 25, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 27, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 29, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 33, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 29, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 27, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 25, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 22, ]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 33, X$Mass==45]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 29, X$Mass==45]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 27, X$Mass==45]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 27,!(X$Mass==45)]
X15=X[X$Day == 27,X$Mass!=45]
X15=X[X$Day == 27 & X$Mass!=45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 29 & X$Mass!=45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 33 & X$Mass!=45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 25 & X$Mass!=45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 22 & X$Mass!=45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 20 & X$Mass!=45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 18 & X$Mass!=45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 15 & X$Mass!=45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 15 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 13 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 11 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 6 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 1 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 4 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 18 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 20 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 22 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 25 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 27 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 29 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 33 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp*Mass, data=X15)
summary(modelDay15)
X15=X[X$Day == 33 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 15 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 27 & X$Mass==45,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
X15=X[X$Day == 27,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 29,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 33,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 25,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 22,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
X15=X[X$Day == 22,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 20,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 18,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 15,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 13,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 11,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
X15=X[X$Day == 6,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 4,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
X15=X[X$Day == 1,]
modelDay15 <- aov(Intensity ~ Temp, data=X15)
summary(modelDay15)
coef(modelDay15)
View(X)
y
y
model1 <- aov(Intensity ~ Temp*Mass*Day, data=X1)
#Without Mass 45
X1=X[39:152,]
model1 <- aov(Intensity ~ Temp*Mass*Day, data=X1)
summary(model1)
coef(model1)
ggplot(X1, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity")
View(X)
#Only Masses 57 and 74
X6=X[c(39:76,115:152),]
model6 <- aov(Intensity ~ Temp*Mass*Day, data=X6)
summary(model6)
coef(model6)
ggplot(X6, aes(x=Day, y=Intensity, color=factor(Mass), linetype=factor(Temp))) +
geom_line(size = 1.5) +
labs(title="Day vs Intensity",
x="Day",
y="Intensity") +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
file="DataBrines.csv"
X=read.csv(file, row.names=1, check.names = FALSE, sep=";")
View(modelDay15)
View(modelDay15)
View(X)
file="DataBrines.csv"
X=read.csv(file, row.names=1, check.names = FALSE, sep=";")
View(X)
X=X[,5:1199]
pca=prcomp(X, retx = TRUE, center = TRUE, scale. = TRUE, tol = NULL, rank.=20)
summary(pca)
##Calculate scores and loadings
pcascores <- pca$x
pcaloadings <- pca$rotation
PCAcolors <- c("#66c2a5","#fc8d62","#8da0cb", "#E5C494", "#B3B3B3")
plot(pcascores[,1:2], pch=21, col=PCAcolors, bg=PCAcolors, cex=1.5)
text(pcascores[,1:2],labels=rownames(pcascores))
PCAcolors <- c("#66c2a5","#fc8d62","#8da0cb", "#E5C494", "#B3B3B3")
plot(pcascores[,1:2], pch=21, col=PCAcolors, bg=PCAcolors, cex=1.5)
text(pcascores[,1:2],labels=rownames(pcascores))
plot(pcascores[,2:3], pch=21, col=PCAcolors, bg=PCAcolors, cex=1.5)
text(pcascores[,2:3],labels=rownames(pcascores))
plot(pcascores[,c(1,3)], pch=21, col=PCAcolors, bg=PCAcolors, cex=1.5)
text(pcascores[,c(1,3)],labels=rownames(pcascores))
citation("pkgname")
citation()
version$version.string
cite(prospectr)
cite(caret)
cite(rchemo)
library(prospectr)
library(caret)
library(rchemo)
cite(prospectr)
cite(caret)
cite(rchemo)
library(prospectr)
library(caret)
library(rchemo)
cite(prospectr)
cite(caret)
cite(rchemo)
cite("prospectr")
cite("caret")
citation("prospectr")
citation("caret")
citation("rchemo")
# Change colour of bar plot
c.pc1 <- ifelse(pca$rotation[,1] > 0, yes="green2", no="red2")
c.pc2 <- ifelse(pca$rotation[,2] > 0, "green2", "red2")
c.pc3 <- ifelse(pca$rotation[,3] > 0, "green2", "red2")
n.pc1 <- ifelse(pca$rotation[,1] > 0, yes=-0.05, no=pca$rotation[,1]-0.01)
n.pc2 <- ifelse(pca$rotation[,2] > 0, yes=-0.0, no=pca$rotation[,2]-0.01)
n.pc3 <- ifelse(pca$rotation[,3] > 0, yes=-0.0, no=pca$rotation[,3]-0.01)
par(mar=c(5,5,5,2)) # Set margins
par(mfrow = c(2, 1))
barplot(pca$rotation[,1], main="PC 1",cex.main=4, cex.axis=3, ylim = c(-0.03, 0.03), las=2, col=c.pc1,cex.sub=2, cex.lab=2, cex.names=2)
barplot(pca$rotation[,2], main="PC 2",cex.main=4, cex.axis=3, ylim = c(-0.03, 0.03), las=2, col=c.pc1,cex.sub=2, cex.lab=2, cex.names=2)
barplot(pca$rotation[,3], main="PC 3",cex.main=4, cex.axis=3, ylim = c(-0.03, 0.03), las=2, col=c.pc1,cex.sub=2, cex.lab=2, cex.names=2)
par(mar=c(5,5,5,2)) # Set margins
par(mfrow = c(3, 1))
barplot(pca$rotation[,1], main="PC 1",cex.main=4, cex.axis=3, ylim = c(-0.03, 0.03), las=2, col=c.pc1,cex.sub=2, cex.lab=2, cex.names=2)
barplot(pca$rotation[,2], main="PC 2",cex.main=4, cex.axis=3, ylim = c(-0.03, 0.03), las=2, col=c.pc1,cex.sub=2, cex.lab=2, cex.names=2)
barplot(pca$rotation[,3], main="PC 3",cex.main=4, cex.axis=3, ylim = c(-0.03, 0.03), las=2, col=c.pc1,cex.sub=2, cex.lab=2, cex.names=2)
setwd("C:/Users/berto011/OneDrive - Wageningen University & Research/Proyectos/ANTARES-TOMATES/Serbia/Serbia/Brines")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
library (rchemo)
file="DataBrines.csv"
X=read.csv(file, row.names=1, check.names = FALSE, sep=";")
row_names_df_to_remove<-c("2023-12-19_30C (3)", "2023-12-19_15C (1)", "11-12-2023_15C (4)", "11-12-2023_15C (3)", "20-22-2023_15C (3)")
X=(X[!(row.names(X) %in% row_names_df_to_remove),])
install.packages("Matrix")
install.packages("lme4")
library(Matrix)
library(lme4)
install.packages("Matrix", dependencies=TRUE)
install.packages("tidyverse")
#Fit a mixed lineal model
#mixedModel <- lmer(Intensity ~ Temp * Day + (1|Mass), data = LargeData)
# Instala el paquete nlme si aún no lo tienes instalado
install.packages("nlme")
# Carga el paquete nlme
library(nlme)
# Ajusta un modelo lineal mixto
model_mix_nlme <- lme(Intensity ~ Temp * Day, random = ~1 | Mass, data = LargeData)
LargeData <- X %>%
pivot_longer(cols = -c(Name, Date, Day, Temp), names_to = "Mass", values_to = "Intensity")
LargeData <- pivot_longer(X, cols = -c(Name, Date, Day, Temp), names_to = "Mass", values_to = "Intensity")
install.packages("dplyr")
install.packages("tidyr")
library(dplyr)
library(tidyr)
library(dplyr)
library(tidyr)
LargeData <- pivot_longer(X, cols = -c(Name, Date, Day, Temp), names_to = "Mass", values_to = "Intensity")
# Ajusta un modelo lineal mixto
model_mix_nlme <- lme(Intensity ~ Temp * Day, random = ~1 | Mass, data = LargeData)
# Carga el paquete nlme
library(nlme)
# Ajusta un modelo lineal mixto
model_mix_nlme <- lme(Intensity ~ Temp * Day, random = ~1 | Mass, data = LargeData)
lme(formula, random = ~1 | Mass, data = LargeData, control = lmeControl(opt = "optim"))
