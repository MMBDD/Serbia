# Ejemplo de modelo de Kaplan-Meier
library(survival)
modelo_supervivencia <- survfit(Surv(Day, Event) ~ Temp, data = LargeData)
summary(modelo_supervivencia)
# Suponiendo que tus datos se llaman 'tus_datos'
LargeData$Event <- ifelse(LargeData$Day >= 6, 1, 0)
# Muestra los primeros registros para verificar la adición de la columna 'Evento'
head(LargeData)
# Ejemplo de modelo de Kaplan-Meier
library(survival)
modelo_supervivencia <- survfit(Surv(Day, Event) ~ Temp, data = LargeData)
summary(modelo_supervivencia)
# Suponiendo que tus datos se llaman 'tus_datos'
LargeData$Event <- ifelse(LargeData$Day >= 1, 1, 0)
# Muestra los primeros registros para verificar la adición de la columna 'Evento'
head(LargeData)
# Ejemplo de modelo de Kaplan-Meier
library(survival)
modelo_supervivencia <- survfit(Surv(Day, Event) ~ Temp, data = LargeData)
summary(modelo_supervivencia)
plot(modelo_supervivencia, main = "Survival curve", xlab = "Time", ylab = "Survival Probability", col = "blue", lwd = 2)
# Crear un objeto de supervivencia para cada nivel de temperatura
surv_object_temp_15 <- Surv(time = LargeData$Day[LargeData$Temp == 15], event = LargeData$Event[LargeData$Temp == 15])
surv_object_temp_25 <- Surv(time = LargeData$Day[LargeData$Temp == 25], event = LargeData$Event[LargeData$Temp == 25])
surv_object_temp_30 <- Surv(time = LargeData$Day[LargeData$Temp == 30], event = LargeData$Event[LargeData$Temp == 30])
# Ajustar modelos de Kaplan-Meier para cada nivel de temperatura
modelo_supervivencia_temp_15 <- survfit(surv_object_temp_15 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_25 <- survfit(surv_object_temp_25 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_30 <- survfit(surv_object_temp_30 ~ 1, conf.type = "log-log")
# Dibujar la curva de supervivencia para la temperatura 15
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Curva de Supervivencia por Temperatura", xlab = "Día", ylab = "Probabilidad de Supervivencia")
# Añadir la curva de supervivencia para la temperatura 25
lines(modelo_supervivencia_temp_25, col = "red", lwd = 2)
# Añadir la curva de supervivencia para la temperatura 30
lines(modelo_supervivencia_temp_30, col = "green", lwd = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15", "Temp 25", "Temp 30"), col = c("blue", "red", "green"), lwd = 2)
# Dibujar la curva de supervivencia para la temperatura 15
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve", xlab = "Day", ylab = "Survival probability")
# Añadir la curva de supervivencia para la temperatura 25
lines(modelo_supervivencia_temp_25, col = "red", lwd = 2)
# Añadir la curva de supervivencia para la temperatura 30
lines(modelo_supervivencia_temp_30, col = "green", lwd = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15", "Temp 25", "Temp 30"), col = c("blue", "red", "green"), lwd = 2)
#Only Masses 57 and 74
X6=X[c(39:76,115:152),]
model6 <- aov(Intensity ~ Temp*Mass*Day, data=X6)
file="DataBrines.csv"
X=read.csv(file, row.names=1, check.names = FALSE, sep=";")
row_names_df_to_remove<-c("2023-12-19_30C (3)", "2023-12-19_15C (1)", "11-12-2023_15C (4)", "11-12-2023_15C (3)", "20-22-2023_15C (3)")
X=(X[!(row.names(X) %in% row_names_df_to_remove),])
#Only Masses 57 and 74
X6=X[c(39:76,115:152),]
model6 <- aov(Intensity ~ Temp*Mass*Day, data=X6)
View(X6)
file2="DataPerMass.csv"
X2=read.csv(file2, row.names=1, check.names = FALSE, sep=";")
#Only Masses 57 and 74
X6=X2[c(39:76,115:152),]
model6 <- aov(Intensity ~ Temp*Mass*Day, data=X6)
summary(model6)
# Crea un dataframe con las predicciones del modelo
predictions <- data.frame(
Temp = rep(levels(X6$Temp), each = length(levels(X6$Mass)) * length(levels(X6$Day))),
Mass = rep(rep(levels(X6$Mass), each = length(levels(X6$Day))), times = length(levels(X6$Temp))),
Day = rep(rep(levels(X6$Day), times = length(levels(X6$Mass))), each = length(levels(X6$Temp))),
Intensity = predict(model6, X6)  # Ajusta a tu estructura de datos
)
# Crea un dataframe con las predicciones del modelo
predictions <- data.frame(
Temp = rep(levels(X6$Temp), each = length(levels(X6$Mass)) * length(levels(X6$Day))),
Mass = rep(rep(levels(X6$Mass), each = length(levels(X6$Day))), times = length(levels(X6$Temp))),
Day = rep(rep(levels(X6$Day), times = length(levels(X6$Mass))), each = length(levels(X6$Temp))),
Intensity = predict(model6, X6)  # Ajusta a tu estructura de datos
)
# Crea un gráfico de barras para visualizar las interacciones Temp y Day para cada nivel de Mass
ggplot(predictions, aes(x = Day, y = Intensity, fill = as.factor(Temp))) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(~Mass) +
labs(title = "Visualización de la interacción entre Temp y Day para cada nivel de Mass",
x = "Day",
y = "Intensity",
fill = "Temp")
library(ggplot2)
library(ggplot2)
# Crea un gráfico de barras para visualizar las interacciones Temp y Day para cada nivel de Mass
ggplot(predictions, aes(x = Day, y = Intensity, fill = as.factor(Temp))) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(~Mass) +
labs(title = "Visualización de la interacción entre Temp y Day para cada nivel de Mass",
x = "Day",
y = "Intensity",
fill = "Temp")
# Crea un dataframe con las predicciones del modelo
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = levels(X6$Day)
)
predictions$Intensity <- predict(model6, predictions)  # Ajusta a tu estructura de datos
View(X2)
model6 <- aov(Intensity ~ Temp*Mass*Day, data=X6)
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = levels(X6$Day)
)
# Crea un gráfico de líneas para visualizar las interacciones Temp y Day para cada nivel de Mass
ggplot(predictions, aes(x = Day, y = Intensity, group = Temp, color = as.factor(Temp))) +
geom_line() +
facet_grid(~Mass) +
labs(title = "Visualización de la interacción entre Temp y Day para cada nivel de Mass",
x = "Day",
y = "Intensity",
color = "Temp")
View(X2)
View(X2)
# Crea un dataframe con todas las combinaciones de Temp, Mass y Day, excluyendo los días 29 y 22
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = levels(X6$Day)
)
# Excluye los días 29 y 22
predictions <- predictions[!(predictions$Day %in% c(29, 22)), ]
# Crea un gráfico de líneas para visualizar las interacciones Temp y Day para cada nivel de Mass
ggplot(predictions, aes(x = Day, y = Intensity, group = Temp, color = as.factor(Temp))) +
geom_line() +
facet_grid(~Mass) +
labs(title = "Visualización de la interacción entre Temp y Day para cada nivel de Mass (excluyendo días 29 y 22)",
x = "Day",
y = "Intensity",
color = "Temp")
View(X2)
# Crea un dataframe con todas las combinaciones de Temp, Mass y Day, excluyendo los días 29 y 22
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = levels(X6$Day)
)
# Excluye los días 29 y 22
predictions <- predictions[!(predictions$Day %in% c(29, 22)), ]
# Crea un gráfico de líneas para visualizar las interacciones Temp y Day para cada nivel de Mass
ggplot(predictions, aes(x = Day, y = Intensity, group = Temp, color = as.factor(Temp))) +
geom_line() +
facet_grid(~Mass + Temp) +
labs(title = "Visualización de la interacción entre Temp y Day para cada nivel de Mass (excluyendo días 29 y 22)",
x = "Day",
y = "Intensity",
color = "Temp")
# Ajusta el modelo ANOVA
model6 <- aov(Intensity ~ Temp*Mass*Day, data = X6)
# Crea un conjunto de datos con todas las combinaciones de Temp, Mass y Day
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = setdiff(levels(X6$Day), c(22, 29))  # Excluir días 22 y 29
)
# Realiza predicciones con el modelo ajustado
predictions$Intensity <- predict(model6, newdata = predictions)
file2="DataPerMass.csv"
X2=read.csv(file2, row.names=1, check.names = FALSE, sep=";")
#Only Masses 57 and 74
X6=X2[c(39:76,115:152),]
#Only Masses 57 and 74
X6=X2[c(39:76,115:152),]
# Ajusta el modelo ANOVA
model6 <- aov(Intensity ~ Temp*Mass*Day, data = X6)
# Crea un conjunto de datos con todas las combinaciones de Temp, Mass y Day
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = setdiff(levels(X6$Day), c(22, 29))  # Excluir días 22 y 29
)
# Realiza predicciones con el modelo ajustado
predictions$Intensity <- predict(model6, newdata = predictions)
# Crea un conjunto de datos con todas las combinaciones de Temp, Mass y Day
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = levels(X6$Day)
)
# Realiza predicciones con el modelo ajustado
predictions$Intensity <- predict(model6, newdata = predictions)
View(X2)
colnames()
colnames(X2)
library(dplyr)
library(dplyr)
# Realiza predicciones con el modelo ajustado
predictions$Intensity <- predict(model6, newdata = predictions)
View(X2)
# Crea un conjunto de datos con todas las combinaciones de Temp, Mass y Day
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = levels(X6$Day)
)
# Realiza predicciones con el modelo ajustado
predictions$Intensity <- predict(model6, newdata = predictions)
# Crea un gráfico de líneas para visualizar las interacciones Temp y Day para cada nivel de Mass
ggplot(predictions, aes(x = Day, y = Intensity, group = interaction(Temp, Mass), color = as.factor(Temp))) +
geom_line() +
facet_grid(~Mass) +
labs(title = "Visualización de la interacción entre Temp y Day para cada nivel de Mass",
x = "Day",
y = "Intensity",
color = "Temp")
# Verificar la instalación y cargar paquetes
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
setwd("C:/work/Mercedes/Serbia1024/Serbia/Brines")
file2="DataPerMass.csv"
X2=read.csv(file2, row.names=1, check.names = FALSE, sep=";")
#Only Masses 57 and 74
X6=X2[c(39:76,115:152),]
model6 <- aov(Intensity ~ Temp*Mass*Day, data=X6)
summary(model6)
# Carga el paquete ggplot2
library(ggplot2)
# Verificar la instalación y cargar paquetes
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
# Ajusta el modelo ANOVA
model6 <- aov(Intensity ~ Temp*Mass*Day, data = X6)
# Crea un conjunto de datos con todas las combinaciones de Temp, Mass y Day
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = levels(X6$Day)
)
# Realiza predicciones con el modelo ajustado
predictions$Intensity <- predict(model6, newdata = predictions)
# Crea un gráfico de líneas para visualizar las interacciones Temp y Day para cada nivel de Mass
ggplot(predictions, aes(x = Day, y = Intensity, group = interaction(Temp, Mass), color = as.factor(Temp))) +
geom_line() +
facet_grid(~Mass) +
labs(title = "Visualización de la interacción entre Temp y Day para cada nivel de Mass",
x = "Day",
y = "Intensity",
color = "Temp")
View(predictions)
# Verificar niveles de Temp, Mass y Day
unique(X6$Temp)
unique(X6$Mass)
unique(X6$Day)
# Mostrar la estructura del conjunto de datos
str(X6)
# Verificar si hay datos faltantes
sum(is.na(X6$Temp))
sum(is.na(X6$Mass))
sum(is.na(X6$Day))
# Sintaxis de expand.grid
predictions <- expand.grid(
Temp = levels(X6$Temp),
Mass = levels(X6$Mass),
Day = levels(X6$Day)
)
library(emmeans)
library(ggplot2)
# Obtener medias ajustadas y intervalos de confianza
means <- emmeans(model6, ~ Temp * Mass * Day)
# Graficar los resultados
plot(means, by = c("Temp", "Mass"))
# Asumiendo que 'datos' es tu conjunto de datos
# Ajustar el modelo mixto
model6 <- aov(Intensity ~ Temp * Mass * Day, data = X6)
# Obtener las medias ajustadas
means <- emmeans(model6, ~ Temp * Day)
# Convertir a formato de datos
means_data <- as.data.frame(means)
# Crear el gráfico
ggplot(means_data, aes(x = Day, y = emmean, color = as.factor(Temp))) +
geom_line() +
geom_ribbon(aes(ymin = lower.CL, ymax = upper.CL, fill = as.factor(Temp)), alpha = 0.2) +
labs(title = "Influencia de la Temperatura a través de los Días",
x = "Día",
y = "Intensidad") +
scale_fill_manual(values = c("blue", "red", "green")) +
scale_color_manual(values = c("blue", "red", "green")) +
facet_wrap(~Temp, scales = "free_y") +
theme_minimal()
model1 <- aov(Intensity ~ Temp*Mass*Day, data=X2)
summary(model1)
coefficients(model1)
#Only Masses 57 and 74
X6=X2[c(39:76,115:152),]
model6 <- aov(Intensity ~ Temp*Mass*Day, data=X6)
summary(model6)
coefficients(model6)
#Without Mass 45
X1=X2[39:152,]
model3 <- aov(Intensity ~ Temp*Mass*Day, data=X1)
summary(model)
coefficients(model3)
summary(model3)
coefficients(model3)
#Only Mass 45
X4=X2[1:38,]
model4 <- aov(Intensity ~ Temp*Mass*Day, data=X4)
summary(model4)
coefficients(model4)
file="DataBrines.csv"
X=read.csv(file, row.names=1, check.names = FALSE, sep=";")
row_names_df_to_remove<-c("2023-12-19_30C (3)", "2023-12-19_15C (1)", "11-12-2023_15C (4)", "11-12-2023_15C (3)", "20-22-2023_15C (3)")
X=(X[!(row.names(X) %in% row_names_df_to_remove),])
LargeData <- X %>%
pivot_longer(cols = -c(Name, Date, Day, Temp), names_to = "Mass", values_to = "Intensity")
library(Matrix)
library(lme4)
#install.packages("tidyverse")
library(tidyverse)
file="DataBrines.csv"
X=read.csv(file, row.names=1, check.names = FALSE, sep=";")
row_names_df_to_remove<-c("2023-12-19_30C (3)", "2023-12-19_15C (1)", "11-12-2023_15C (4)", "11-12-2023_15C (3)", "20-22-2023_15C (3)")
X=(X[!(row.names(X) %in% row_names_df_to_remove),])
LargeData <- X %>%
pivot_longer(cols = -c(Name, Date, Day, Temp), names_to = "Mass", values_to = "Intensity")
setwd("C:/work/Mercedes/Serbia1024/Serbia/Brines")
library(Matrix)
library(lme4)
#install.packages("tidyverse")
library(tidyverse)
file="DataBrines.csv"
X=read.csv(file, row.names=1, check.names = FALSE, sep=";")
row_names_df_to_remove<-c("2023-12-19_30C (3)", "2023-12-19_15C (1)", "11-12-2023_15C (4)", "11-12-2023_15C (3)", "20-22-2023_15C (3)")
X=(X[!(row.names(X) %in% row_names_df_to_remove),])
LargeData <- X %>%
pivot_longer(cols = -c(Name, Date, Day, Temp), names_to = "Mass", values_to = "Intensity")
library(survival)
modelo_supervivencia <- survfit(Surv(Day, Event) ~ Temp, data = LargeData)
# Suponiendo que tus datos se llaman 'tus_datos'
LargeData$Event <- ifelse(LargeData$Day >= 1, 1, 0)
# Muestra los primeros registros para verificar la adición de la columna 'Evento'
head(LargeData)
modelo_supervivencia <- survfit(Surv(Day, Event) ~ Temp, data = LargeData)
summary(modelo_supervivencia)
plot(modelo_supervivencia, main = "Survival curve", xlab = "Time", ylab = "Survival Probability", col = "blue", lwd = 2)
# Crear un objeto de supervivencia para cada nivel de temperatura
surv_object_temp_15 <- Surv(time = LargeData$Day[LargeData$Temp == 15], event = LargeData$Event[LargeData$Temp == 15])
surv_object_temp_25 <- Surv(time = LargeData$Day[LargeData$Temp == 25], event = LargeData$Event[LargeData$Temp == 25])
surv_object_temp_30 <- Surv(time = LargeData$Day[LargeData$Temp == 30], event = LargeData$Event[LargeData$Temp == 30])
# Ajustar modelos de Kaplan-Meier para cada nivel de temperatura
modelo_supervivencia_temp_15 <- survfit(surv_object_temp_15 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_25 <- survfit(surv_object_temp_25 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_30 <- survfit(surv_object_temp_30 ~ 1, conf.type = "log-log")
# Dibujar la curva de supervivencia para la temperatura 15
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve", xlab = "Day", ylab = "Survival probability")
# Añadir la curva de supervivencia para la temperatura 25
lines(modelo_supervivencia_temp_25, col = "red", lwd = 2)
# Añadir la curva de supervivencia para la temperatura 30
lines(modelo_supervivencia_temp_30, col = "green", lwd = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15", "Temp 25", "Temp 30"), col = c("blue", "red", "green"), lwd = 2)
modelo_supervivencia <- survfit(Surv(Day, Event) ~ Temp, data = LargeData)
summary(modelo_supervivencia)
# Crear un objeto de supervivencia para cada nivel de temperatura
surv_object_temp_15 <- Surv(time = LargeData$Day[LargeData$Temp == 15], event = LargeData$Event[LargeData$Temp == 15])
surv_object_temp_25 <- Surv(time = LargeData$Day[LargeData$Temp == 25], event = LargeData$Event[LargeData$Temp == 25])
surv_object_temp_30 <- Surv(time = LargeData$Day[LargeData$Temp == 30], event = LargeData$Event[LargeData$Temp == 30])
# Ajustar modelos de Kaplan-Meier para cada nivel de temperatura
modelo_supervivencia_temp_15 <- survfit(surv_object_temp_15 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_25 <- survfit(surv_object_temp_25 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_30 <- survfit(surv_object_temp_30 ~ 1, conf.type = "log-log")
# Dibujar la curva de supervivencia para la temperatura 15
#plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve", xlab = "Day", ylab = "Survival probability")
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve",
xlab = "Day", ylab = "Survival probability", ylim = c(0, 1), cex.lab = 1.5, cex.axis = 1.2)
# Añadir la curva de supervivencia para la temperatura 25
lines(modelo_supervivencia_temp_25, col = "red", lwd = 2)
# Añadir la curva de supervivencia para la temperatura 30
lines(modelo_supervivencia_temp_30, col = "green", lwd = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15", "Temp 25", "Temp 30"), col = c("blue", "red", "green"), lwd = 2)
# Crear un objeto de supervivencia para cada nivel de temperatura
surv_object_temp_15 <- Surv(time = LargeData$Day[LargeData$Temp == 15], event = LargeData$Event[LargeData$Temp == 15])
surv_object_temp_25 <- Surv(time = LargeData$Day[LargeData$Temp == 25], event = LargeData$Event[LargeData$Temp == 25])
surv_object_temp_30 <- Surv(time = LargeData$Day[LargeData$Temp == 30], event = LargeData$Event[LargeData$Temp == 30])
# Ajustar modelos de Kaplan-Meier para cada nivel de temperatura
modelo_supervivencia_temp_15 <- survfit(surv_object_temp_15 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_25 <- survfit(surv_object_temp_25 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_30 <- survfit(surv_object_temp_30 ~ 1, conf.type = "log-log")
# Dibujar la curva de supervivencia para la temperatura 15
#plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve", xlab = "Day", ylab = "Survival probability")
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve",
xlab = "Day", ylab = "Survival probability", ylim = c(0, 1), cex.lab = 2, cex.axis = 2)
# Añadir la curva de supervivencia para la temperatura 25
lines(modelo_supervivencia_temp_25, col = "red", lwd = 2)
# Añadir la curva de supervivencia para la temperatura 30
lines(modelo_supervivencia_temp_30, col = "green", lwd = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15", "Temp 25", "Temp 30"), col = c("blue", "red", "green"), lwd = 2)
# Crear un objeto de supervivencia para cada nivel de temperatura
surv_object_temp_15 <- Surv(time = LargeData$Day[LargeData$Temp == 15], event = LargeData$Event[LargeData$Temp == 15])
surv_object_temp_25 <- Surv(time = LargeData$Day[LargeData$Temp == 25], event = LargeData$Event[LargeData$Temp == 25])
surv_object_temp_30 <- Surv(time = LargeData$Day[LargeData$Temp == 30], event = LargeData$Event[LargeData$Temp == 30])
# Ajustar modelos de Kaplan-Meier para cada nivel de temperatura
modelo_supervivencia_temp_15 <- survfit(surv_object_temp_15 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_25 <- survfit(surv_object_temp_25 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_30 <- survfit(surv_object_temp_30 ~ 1, conf.type = "log-log")
# Dibujar la curva de supervivencia para la temperatura 15
#plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve", xlab = "Day", ylab = "Survival probability")
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve",
xlab = "Day", ylab = "Survival probability", ylim = c(0, 1), cex.lab = 2, cex.axis = 2)
# Añadir la curva de supervivencia para la temperatura 25
lines(modelo_supervivencia_temp_25, col = "red", lwd = 2)
# Añadir la curva de supervivencia para la temperatura 30
lines(modelo_supervivencia_temp_30, col = "green", lwd = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15", "Temp 25", "Temp 30"), col = c("blue", "red", "green"), lwd = 3)
# Crear un objeto de supervivencia para cada nivel de temperatura
surv_object_temp_15 <- Surv(time = LargeData$Day[LargeData$Temp == 15], event = LargeData$Event[LargeData$Temp == 15])
surv_object_temp_25 <- Surv(time = LargeData$Day[LargeData$Temp == 25], event = LargeData$Event[LargeData$Temp == 25])
surv_object_temp_30 <- Surv(time = LargeData$Day[LargeData$Temp == 30], event = LargeData$Event[LargeData$Temp == 30])
# Ajustar modelos de Kaplan-Meier para cada nivel de temperatura
modelo_supervivencia_temp_15 <- survfit(surv_object_temp_15 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_25 <- survfit(surv_object_temp_25 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_30 <- survfit(surv_object_temp_30 ~ 1, conf.type = "log-log")
# Dibujar la curva de supervivencia para la temperatura 15
#plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve", xlab = "Day", ylab = "Survival probability")
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve",
xlab = "Day", ylab = "Survival probability", ylim = c(0, 1), cex.lab = 2, cex.axis = 2)
# Añadir la curva de supervivencia para la temperatura 25
lines(modelo_supervivencia_temp_25, col = "red", lwd = 2)
# Añadir la curva de supervivencia para la temperatura 30
lines(modelo_supervivencia_temp_30, col = "green", lwd = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15", "Temp 25", "Temp 30"), col = c("blue", "red", "green"), lwd = 4)
# Crear un objeto de supervivencia para cada nivel de temperatura
surv_object_temp_15 <- Surv(time = LargeData$Day[LargeData$Temp == 15], event = LargeData$Event[LargeData$Temp == 15])
surv_object_temp_25 <- Surv(time = LargeData$Day[LargeData$Temp == 25], event = LargeData$Event[LargeData$Temp == 25])
surv_object_temp_30 <- Surv(time = LargeData$Day[LargeData$Temp == 30], event = LargeData$Event[LargeData$Temp == 30])
# Ajustar modelos de Kaplan-Meier para cada nivel de temperatura
modelo_supervivencia_temp_15 <- survfit(surv_object_temp_15 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_25 <- survfit(surv_object_temp_25 ~ 1, conf.type = "log-log")
modelo_supervivencia_temp_30 <- survfit(surv_object_temp_30 ~ 1, conf.type = "log-log")
# Dibujar la curva de supervivencia para la temperatura 15
#plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve", xlab = "Day", ylab = "Survival probability")
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve",
xlab = "Day", ylab = "Survival probability", ylim = c(0, 1), cex.lab = 1.5, cex.axis = 2)
# Añadir la curva de supervivencia para la temperatura 25
lines(modelo_supervivencia_temp_25, col = "red", lwd = 2)
# Añadir la curva de supervivencia para la temperatura 30
lines(modelo_supervivencia_temp_30, col = "green", lwd = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15", "Temp 25", "Temp 30"), col = c("blue", "red", "green"), lwd = 4)
# Personalizar el gráfico de la curva de supervivencia para la temperatura 15
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curve",
xlab = "Day", ylab = "Survival probability", ylim = c(0, 1), cex.lab = 1.5, cex.axis = 1.2)
# Agregar una leyenda
legend("topright", legend = c("Temperature 15"), col = "blue", lwd = 2, cex = 1.2)
# Añadir líneas de referencia, por ejemplo, líneas verticales en ciertos días
abline(v = c(22, 29), col = "red", lty = 2)
# Personalizar los ejes y la leyenda
axis(side = 1, cex.axis = 1.2)
axis(side = 2, cex.axis = 1.2)
# Agregar etiquetas a las líneas de referencia
text(22, 0.5, "Day 22", pos = 4, col = "red", cex = 1.2)
text(29, 0.5, "Day 29", pos = 2, col = "red", cex = 1.2)
# Añadir la curva de supervivencia para la temperatura 25
lines(modelo_supervivencia_temp_25, col = "red", lwd = 2)
# Añadir la curva de supervivencia para la temperatura 30
lines(modelo_supervivencia_temp_30, col = "green", lwd = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15", "Temp 25", "Temp 30"), col = c("blue", "red", "green"), lwd = 4)
# Dibujar las curvas de supervivencia para las tres temperaturas
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curves",
xlab = "Day", ylab = "Survival probability", ylim = c(0, 1))
# Añadir las curvas para las otras temperaturas
lines(modelo_supervivencia_temp_25, col = "green", lwd = 2)
lines(modelo_supervivencia_temp_30, col = "red", lwd = 2)
# Resaltar los días críticos (por ejemplo, Day 22 y Day 29)
abline(v = c(22, 29), col = "red", lty = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15°C", "Temp 25°C", "Temp 30°C"), col = c("blue", "green", "red"), lty = 1, lwd = 2)
# Configuración de parámetros para aumentar el tamaño de la fuente
par(cex.axis = 1.5, cex.lab = 1.5)
# Dibujar las curvas de supervivencia para las tres temperaturas
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curves",
xlab = "Day", ylab = "Survival probability", ylim = c(0, 1))
# Añadir las curvas para las otras temperaturas
lines(modelo_supervivencia_temp_25, col = "green", lwd = 2)
lines(modelo_supervivencia_temp_30, col = "red", lwd = 2)
# Resaltar los días críticos (por ejemplo, Day 22 y Day 29)
abline(v = c(22, 29), col = "red", lty = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15°C", "Temp 25°C", "Temp 30°C"), col = c("blue", "green", "red"), lty = 1, lwd = 2)
# Dibujar las curvas de supervivencia para las tres temperaturas
plot(modelo_supervivencia_temp_15, col = "blue", lwd = 2, main = "Survival Curves",
xlab = "Day", ylab = "Survival probability", ylim = c(0, 1))
# Añadir las curvas para las otras temperaturas
lines(modelo_supervivencia_temp_25, col = "green", lwd = 2)
lines(modelo_supervivencia_temp_30, col = "red", lwd = 2)
# Resaltar los días críticos (por ejemplo, Day 22 y Day 29)
abline(v = c(22, 29), col = "red", lty = 2)
# Etiquetas para los días críticos
text(c(22, 29), 0.8, c("Day 22", "Day 29"), col = "red", pos = 2)
# Añadir leyenda
legend("topright", legend = c("Temp 15°C", "Temp 25°C", "Temp 30°C"), col = c("blue", "green", "red"), lty = 1, lwd = 2)
